swagger: '2.0'
info:
  title: iTEC 2019 Web Store API
  description: "\n[Hatz](https://www.youtube.com/watch?v=xJoHxKLJqNI)\n\n[Admin panel](/admin/)\n\
    [DRF Docs](/api/docs/)\n[ReDoc](/api/redoc/)\n"
  version: v1
host: localhost:8000
schemes:
  - http
basePath: /api
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - Bearer: []
paths:
  /orders/cart/:
    get:
      operationId: ordersCartList
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/CartItem'
        '401':
          description: Authentication credentials were invalid or absent.
          schema:
            $ref: '#/definitions/GenericError'
      tags:
        - orders
    post:
      operationId: ordersCartCreate
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CartItemUpdate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CartItemUpdate'
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ValidationError'
        '401':
          description: Authentication credentials were invalid or absent.
          schema:
            $ref: '#/definitions/GenericError'
      tags:
        - orders
  /orders/cart/{product}/:
    delete:
      operationId: ordersCartDelete
      description: ''
      parameters:
        - name: product
          in: path
          required: true
          type: string
      responses:
        '204':
          description: ''
        '401':
          description: Authentication credentials were invalid or absent.
          schema:
            $ref: '#/definitions/GenericError'
        '403':
          description: Permission denied.
          schema:
            $ref: '#/definitions/GenericError'
        '404':
          description: Object does not exist or caller has insufficient permissions
            to access it.
          schema:
            $ref: '#/definitions/GenericError'
      tags:
        - orders
  /store/categories/:
    get:
      operationId: storeCategoriesList
      description: ''
      parameters:
        - name: flat
          in: query
          required: false
          type: boolean
          default: true
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/CategoryFlat'
      tags:
        - store
      security: []
  /store/products/:
    get:
      operationId: storeProductsList
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              required:
                - category
                - title
                - unit
                - unitPrice
                - quantity
              type: object
              properties:
                id:
                  type: integer
                  readOnly: true
                category:
                  type: string
                  format: slug
                  pattern: ^[-a-zA-Z0-9_]+$
                categoryName:
                  type: string
                  readOnly: true
                seller:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                      pattern: ^\S*$
                      readOnly: true
                      maxLength: 254
                      minLength: 1
                    firstName:
                      type: string
                      maxLength: 30
                    lastName:
                      type: string
                      maxLength: 150
                    id:
                      type: integer
                      readOnly: true
                    isSelf:
                      type: boolean
                      readOnly: true
                    phone:
                      type: string
                      format: phone
                      pattern: ^\+?(?:[0-9]\s*){8,}$
                    city:
                      type: string
                      maxLength: 255
                      minLength: 1
                    address:
                      type: string
                      maxLength: 512
                      minLength: 1
                    personType:
                      type: string
                      enum:
                        - private
                        - company
                    sellerType:
                      type: string
                      enum:
                        - private
                        - company
                  readOnly: true
                title:
                  type: string
                  maxLength: 255
                  minLength: 1
                unit:
                  type: string
                  maxLength: 10
                  minLength: 1
                unitPrice:
                  type: string
                  format: decimal
                quantity:
                  type: integer
        '401':
          description: Authentication credentials were invalid or absent.
          schema:
            $ref: '#/definitions/GenericError'
      tags:
        - store > products
    post:
      operationId: storeProductsCreate
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            required:
              - category
              - title
              - unit
              - unitPrice
              - quantity
              - description
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              category:
                type: string
                format: slug
                pattern: ^[-a-zA-Z0-9_]+$
              categoryName:
                type: string
                readOnly: true
              seller:
                type: object
                properties:
                  email:
                    type: string
                    format: email
                    pattern: ^\S*$
                    readOnly: true
                    maxLength: 254
                    minLength: 1
                  firstName:
                    type: string
                    maxLength: 30
                  lastName:
                    type: string
                    maxLength: 150
                  id:
                    type: integer
                    readOnly: true
                  isSelf:
                    type: boolean
                    readOnly: true
                  phone:
                    type: string
                    format: phone
                    pattern: ^\+?(?:[0-9]\s*){8,}$
                  city:
                    type: string
                    maxLength: 255
                    minLength: 1
                  address:
                    type: string
                    maxLength: 512
                    minLength: 1
                  personType:
                    type: string
                    enum:
                      - private
                      - company
                  sellerType:
                    type: string
                    enum:
                      - private
                      - company
                readOnly: true
              title:
                type: string
                maxLength: 255
                minLength: 1
              unit:
                type: string
                maxLength: 10
                minLength: 1
              unitPrice:
                type: string
                format: decimal
              quantity:
                type: integer
              description:
                type: string
                maxLength: 4096
                minLength: 1
      responses:
        '201':
          description: ''
          schema:
            required:
              - category
              - title
              - unit
              - unitPrice
              - quantity
              - description
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              category:
                type: string
                format: slug
                pattern: ^[-a-zA-Z0-9_]+$
              categoryName:
                type: string
                readOnly: true
              seller:
                type: object
                properties:
                  email:
                    type: string
                    format: email
                    pattern: ^\S*$
                    readOnly: true
                    maxLength: 254
                    minLength: 1
                  firstName:
                    type: string
                    maxLength: 30
                  lastName:
                    type: string
                    maxLength: 150
                  id:
                    type: integer
                    readOnly: true
                  isSelf:
                    type: boolean
                    readOnly: true
                  phone:
                    type: string
                    format: phone
                    pattern: ^\+?(?:[0-9]\s*){8,}$
                  city:
                    type: string
                    maxLength: 255
                    minLength: 1
                  address:
                    type: string
                    maxLength: 512
                    minLength: 1
                  personType:
                    type: string
                    enum:
                      - private
                      - company
                  sellerType:
                    type: string
                    enum:
                      - private
                      - company
                readOnly: true
              title:
                type: string
                maxLength: 255
                minLength: 1
              unit:
                type: string
                maxLength: 10
                minLength: 1
              unitPrice:
                type: string
                format: decimal
              quantity:
                type: integer
              description:
                type: string
                maxLength: 4096
                minLength: 1
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ValidationError'
        '401':
          description: Authentication credentials were invalid or absent.
          schema:
            $ref: '#/definitions/GenericError'
      tags:
        - store > products
  /store/products/{id}/:
    get:
      operationId: storeProductsRead
      description: ''
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this product.
          required: true
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - category
              - title
              - unit
              - unitPrice
              - quantity
              - description
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              category:
                type: string
                format: slug
                pattern: ^[-a-zA-Z0-9_]+$
              categoryName:
                type: string
                readOnly: true
              seller:
                type: object
                properties:
                  email:
                    type: string
                    format: email
                    pattern: ^\S*$
                    readOnly: true
                    maxLength: 254
                    minLength: 1
                  firstName:
                    type: string
                    maxLength: 30
                  lastName:
                    type: string
                    maxLength: 150
                  id:
                    type: integer
                    readOnly: true
                  isSelf:
                    type: boolean
                    readOnly: true
                  phone:
                    type: string
                    format: phone
                    pattern: ^\+?(?:[0-9]\s*){8,}$
                  city:
                    type: string
                    maxLength: 255
                    minLength: 1
                  address:
                    type: string
                    maxLength: 512
                    minLength: 1
                  personType:
                    type: string
                    enum:
                      - private
                      - company
                  sellerType:
                    type: string
                    enum:
                      - private
                      - company
                readOnly: true
              title:
                type: string
                maxLength: 255
                minLength: 1
              unit:
                type: string
                maxLength: 10
                minLength: 1
              unitPrice:
                type: string
                format: decimal
              quantity:
                type: integer
              description:
                type: string
                maxLength: 4096
                minLength: 1
        '401':
          description: Authentication credentials were invalid or absent.
          schema:
            $ref: '#/definitions/GenericError'
        '403':
          description: Permission denied.
          schema:
            $ref: '#/definitions/GenericError'
        '404':
          description: Object does not exist or caller has insufficient permissions
            to access it.
          schema:
            $ref: '#/definitions/GenericError'
      tags:
        - store > products
    patch:
      operationId: storeProductsUpdate
      description: ''
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this product.
          required: true
          type: integer
        - name: data
          in: body
          required: true
          schema:
            required:
              - category
              - title
              - unit
              - unitPrice
              - quantity
              - description
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              category:
                type: string
                format: slug
                pattern: ^[-a-zA-Z0-9_]+$
              categoryName:
                type: string
                readOnly: true
              seller:
                type: object
                properties:
                  email:
                    type: string
                    format: email
                    pattern: ^\S*$
                    readOnly: true
                    maxLength: 254
                    minLength: 1
                  firstName:
                    type: string
                    maxLength: 30
                  lastName:
                    type: string
                    maxLength: 150
                  id:
                    type: integer
                    readOnly: true
                  isSelf:
                    type: boolean
                    readOnly: true
                  phone:
                    type: string
                    format: phone
                    pattern: ^\+?(?:[0-9]\s*){8,}$
                  city:
                    type: string
                    maxLength: 255
                    minLength: 1
                  address:
                    type: string
                    maxLength: 512
                    minLength: 1
                  personType:
                    type: string
                    enum:
                      - private
                      - company
                  sellerType:
                    type: string
                    enum:
                      - private
                      - company
                readOnly: true
              title:
                type: string
                maxLength: 255
                minLength: 1
              unit:
                type: string
                maxLength: 10
                minLength: 1
              unitPrice:
                type: string
                format: decimal
              quantity:
                type: integer
              description:
                type: string
                maxLength: 4096
                minLength: 1
      responses:
        '200':
          description: ''
          schema:
            required:
              - category
              - title
              - unit
              - unitPrice
              - quantity
              - description
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              category:
                type: string
                format: slug
                pattern: ^[-a-zA-Z0-9_]+$
              categoryName:
                type: string
                readOnly: true
              seller:
                type: object
                properties:
                  email:
                    type: string
                    format: email
                    pattern: ^\S*$
                    readOnly: true
                    maxLength: 254
                    minLength: 1
                  firstName:
                    type: string
                    maxLength: 30
                  lastName:
                    type: string
                    maxLength: 150
                  id:
                    type: integer
                    readOnly: true
                  isSelf:
                    type: boolean
                    readOnly: true
                  phone:
                    type: string
                    format: phone
                    pattern: ^\+?(?:[0-9]\s*){8,}$
                  city:
                    type: string
                    maxLength: 255
                    minLength: 1
                  address:
                    type: string
                    maxLength: 512
                    minLength: 1
                  personType:
                    type: string
                    enum:
                      - private
                      - company
                  sellerType:
                    type: string
                    enum:
                      - private
                      - company
                readOnly: true
              title:
                type: string
                maxLength: 255
                minLength: 1
              unit:
                type: string
                maxLength: 10
                minLength: 1
              unitPrice:
                type: string
                format: decimal
              quantity:
                type: integer
              description:
                type: string
                maxLength: 4096
                minLength: 1
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ValidationError'
        '401':
          description: Authentication credentials were invalid or absent.
          schema:
            $ref: '#/definitions/GenericError'
        '403':
          description: Permission denied.
          schema:
            $ref: '#/definitions/GenericError'
        '404':
          description: Object does not exist or caller has insufficient permissions
            to access it.
          schema:
            $ref: '#/definitions/GenericError'
      tags:
        - store > products
    delete:
      operationId: storeProductsDelete
      description: ''
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this product.
          required: true
          type: integer
      responses:
        '204':
          description: ''
        '401':
          description: Authentication credentials were invalid or absent.
          schema:
            $ref: '#/definitions/GenericError'
        '403':
          description: Permission denied.
          schema:
            $ref: '#/definitions/GenericError'
        '404':
          description: Object does not exist or caller has insufficient permissions
            to access it.
          schema:
            $ref: '#/definitions/GenericError'
      tags:
        - store > products
  /store/profile/:
    get:
      operationId: storeProfileRead
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/StoreProfile'
        '401':
          description: Authentication credentials were invalid or absent.
          schema:
            $ref: '#/definitions/GenericError'
        '403':
          description: Permission denied.
          schema:
            $ref: '#/definitions/GenericError'
        '404':
          description: Object does not exist or caller has insufficient permissions
            to access it.
          schema:
            $ref: '#/definitions/GenericError'
      tags:
        - store > profile
    post:
      operationId: storeProfileCreate
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/StoreProfileCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/StoreProfileCreate'
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ValidationError'
        '401':
          description: Authentication credentials were invalid or absent.
          schema:
            $ref: '#/definitions/GenericError'
        '403':
          description: Permission denied.
          schema:
            $ref: '#/definitions/GenericError'
        '404':
          description: Object does not exist or caller has insufficient permissions
            to access it.
          schema:
            $ref: '#/definitions/GenericError'
      tags:
        - store > profile
    patch:
      operationId: storeProfileUpdate
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/StoreProfile'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/StoreProfile'
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ValidationError'
        '401':
          description: Authentication credentials were invalid or absent.
          schema:
            $ref: '#/definitions/GenericError'
        '403':
          description: Permission denied.
          schema:
            $ref: '#/definitions/GenericError'
        '404':
          description: Object does not exist or caller has insufficient permissions
            to access it.
          schema:
            $ref: '#/definitions/GenericError'
      tags:
        - store > profile
  /user/change-password/:
    post:
      operationId: changePassword
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ChangePasswordInput'
      responses:
        '200':
          description: Password changed succesfully.
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ValidationError'
        '401':
          description: Authentication credentials were invalid or absent.
          schema:
            $ref: '#/definitions/GenericError'
      tags:
        - user
  /user/delete-account/:
    delete:
      operationId: deleteAccount
      description: ''
      parameters: []
      responses:
        '200':
          description: Account deleted succesfully.
        '401':
          description: Authentication credentials were invalid or absent.
          schema:
            $ref: '#/definitions/GenericError'
      tags:
        - user
  /user/login/:
    post:
      operationId: login
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/LoginInput'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserTokenResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - user
      security: []
  /user/logout/:
    post:
      operationId: logout
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/LogoutInput'
      responses:
        '200':
          description: Logged out succesfully.
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ValidationError'
        '401':
          description: Authentication credentials were invalid or absent.
          schema:
            $ref: '#/definitions/GenericError'
      tags:
        - user
  /user/register/:
    post:
      operationId: register
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterInput'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TokenResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - user
      security: []
  /user/request-password-reset/:
    post:
      operationId: requestPasswordReset
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/RequestPasswordResetInput'
      responses:
        '200':
          description: Password reset initiated succesfully.
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - user
      security: []
  /user/reset-password/:
    post:
      operationId: resetPassword
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ResetPasswordInput'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserTokenResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - user
      security: []
definitions:
  CartItem:
    required:
      - product
      - quantity
    type: object
    properties:
      product:
        required:
          - category
          - title
          - unit
          - unitPrice
          - quantity
        type: object
        properties:
          id:
            type: integer
            readOnly: true
          category:
            type: string
            format: slug
            pattern: ^[-a-zA-Z0-9_]+$
          categoryName:
            type: string
            readOnly: true
          seller:
            type: integer
            readOnly: true
          title:
            type: string
            maxLength: 255
            minLength: 1
          unit:
            type: string
            maxLength: 10
            minLength: 1
          unitPrice:
            type: string
            format: decimal
          quantity:
            type: integer
      quantity:
        type: integer
  GenericError:
    title: Generic API Error
    required:
      - detail
    type: object
    properties:
      detail:
        description: Error details
        type: string
      code:
        description: Error code
        type: string
  ValidationError:
    title: Validation Error
    type: object
    properties:
      nonFieldErrors:
        description: List of validation errors not related to any field
        type: array
        items:
          type: string
    additionalProperties:
      description: A list of error messages for each field that triggered a validation
        error
      type: array
      items:
        type: string
  CartItemUpdate:
    required:
      - product
      - quantity
    type: object
    properties:
      product:
        type: integer
      quantity:
        type: integer
  CategoryFlat:
    required:
      - name
      - slug
    type: object
    properties:
      name:
        type: string
        maxLength: 255
        minLength: 1
      slug:
        type: string
        format: slug
        pattern: ^[-a-zA-Z0-9_]+$
        maxLength: 30
        minLength: 1
      parent:
        type: string
        format: slug
        pattern: ^[-a-zA-Z0-9_]+$
        readOnly: true
  StoreProfile:
    required:
      - products
    type: object
    properties:
      email:
        type: string
        format: email
        pattern: ^\S*$
        readOnly: true
        maxLength: 254
        minLength: 1
      firstName:
        type: string
        maxLength: 30
      lastName:
        type: string
        maxLength: 150
      id:
        type: integer
        readOnly: true
      isSelf:
        type: boolean
        readOnly: true
      phone:
        type: string
        format: phone
        pattern: ^\+?(?:[0-9]\s*){8,}$
      city:
        type: string
        maxLength: 255
        minLength: 1
      address:
        type: string
        maxLength: 512
        minLength: 1
      personType:
        type: string
        enum:
          - private
          - company
      sellerType:
        type: string
        enum:
          - private
          - company
      products:
        type: array
        items:
          required:
            - category
            - title
            - unit
            - unitPrice
            - quantity
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            category:
              type: string
              format: slug
              pattern: ^[-a-zA-Z0-9_]+$
            categoryName:
              type: string
              readOnly: true
            seller:
              type: integer
              readOnly: true
            title:
              type: string
              maxLength: 255
              minLength: 1
            unit:
              type: string
              maxLength: 10
              minLength: 1
            unitPrice:
              type: string
              format: decimal
            quantity:
              type: integer
  StoreProfileCreate:
    required:
      - firstName
      - lastName
      - phone
      - city
      - address
      - personType
      - sellerType
    type: object
    properties:
      email:
        type: string
        format: email
        pattern: ^\S*$
        readOnly: true
        maxLength: 254
        minLength: 1
      firstName:
        type: string
        maxLength: 30
      lastName:
        type: string
        maxLength: 150
      id:
        type: integer
        readOnly: true
      isSelf:
        type: boolean
        readOnly: true
      phone:
        type: string
        format: phone
        pattern: ^\+?(?:[0-9]\s*){8,}$
      city:
        type: string
        maxLength: 255
        minLength: 1
      address:
        type: string
        maxLength: 512
        minLength: 1
      personType:
        type: string
        enum:
          - private
          - company
      sellerType:
        type: string
        enum:
          - private
          - company
  ChangePasswordInput:
    required:
      - oldPassword
      - newPassword
    type: object
    properties:
      oldPassword:
        type: string
        minLength: 8
      newPassword:
        type: string
        minLength: 8
  LoginInput:
    required:
      - email
      - password
    type: object
    properties:
      email:
        type: string
        format: email
        pattern: ^\S*$
        maxLength: 254
        minLength: 1
      password:
        type: string
        maxLength: 128
        minLength: 8
  Token:
    description: Authentication token, if a user was logged in by this request.
    type: object
    properties:
      key:
        type: string
        readOnly: true
        minLength: 1
      created:
        type: string
        format: date-time
        readOnly: true
      expiration:
        type: string
        format: date-time
        readOnly: true
  User:
    description: The user logged in by this request, if any.
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      username:
        description: 150 characters or fewer. Letters, digits and @/./+/-/_ only.
        type: string
        readOnly: true
        minLength: 1
      email:
        type: string
        format: email
        pattern: ^\S*$
        readOnly: true
        maxLength: 254
        minLength: 1
      firstName:
        type: string
        maxLength: 30
      lastName:
        type: string
        maxLength: 150
  UserTokenResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/Token'
      user:
        $ref: '#/definitions/User'
      email:
        description: E-mail address of the affected user, if applicable. This is sent
          even if the user was not logged in.
        type: string
        format: email
        readOnly: true
        minLength: 1
  LogoutInput:
    type: object
    properties:
      token:
        description: Invalidate a specific session. Invalidates the current session
          if null.
        type: string
        default: ''
        minLength: 1
      all:
        description: Invalidate all sessions except the current session.
        type: boolean
        default: false
  RegisterInput:
    required:
      - email
      - password
    type: object
    properties:
      email:
        type: string
        format: email
        pattern: ^\S*$
        maxLength: 254
        minLength: 1
      firstName:
        type: string
        maxLength: 30
      lastName:
        type: string
        maxLength: 150
      password:
        type: string
        maxLength: 128
        minLength: 8
  TokenResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/Token'
  RequestPasswordResetInput:
    required:
      - email
    type: object
    properties:
      email:
        type: string
        format: email
        pattern: ^\S*$
        maxLength: 254
        minLength: 1
  ResetPasswordInput:
    required:
      - password
      - uidb36
      - key
    type: object
    properties:
      password:
        type: string
        maxLength: 128
        minLength: 8
      uidb36:
        type: string
        maxLength: 64
        minLength: 1
      key:
        type: string
        maxLength: 64
        minLength: 1
